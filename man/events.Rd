% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/admin_PIPELINE_events.R
\name{events}
\alias{events}
\title{Pipeline function for extracting events from the raw data}
\usage{
events(x, threshold = 1)
}
\arguments{
\item{x}{A data.table of raw data as returned by the function "fetch_events"}

\item{threshold}{The threshold for separating an event into two (in seconds).
Defaults to "1", which means that any lines that are more than 1 second apart
will be split into two events.}
}
\value{
A data.table as represented in the EVENTS table.
}
\description{
Pipeline for extracting events from the raw data. Note that this function
is used in the function "upload_events" (which uploads the EVENTS table), but can also
used separately by the user.
}
\details{
Steps of the algorithm (please see individual functions for details):
\itemize{
 \item 1. remove_faulty_data removes any uninterpretable data (i.e. datetime_ is NA)
 \item 2. trim_data removes any data with meaningless light barriers. All lines with
 a transponder reading are kept.
 \item 3. fetch_ins_outs splits the raw data into groups of lines that belong to one
 "in" or  "out" (or any other movement)
 \item 4. assign_direction assigns the direction of the respective movement based
 (see help("assign_direction") for details of the algorithm)
 \item 5. concat_events groups events that assumably belong together (i.e. "in-out")
 together. For the specific rules see code (marked with ###RULE###).
}
}
\examples{
con = dbcon(user = "YOUR_USER_NAME", host = getOption("host") )
x = fetch_data(con = con, box = 1, from = 10000, to = 20000)
closeCon(con)
x = events(x)

}
\seealso{
\code{\link{fetch_data}}, \code{\link{remove_faulty_data}}, \code{\link{trim_data}},
\code{\link{fetch_ins_outs}}, \code{\link{assign_direction}}, \code{\link{concat_events}},
\code{\link{upload_events}}
}
\author{
LS
}
